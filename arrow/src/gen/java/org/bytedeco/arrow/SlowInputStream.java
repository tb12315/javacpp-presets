// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.arrow.global.arrow.*;


/** \brief An InputStream wrapper that makes reads slower.
 * 
 *  Read() calls are made slower by an average latency (in seconds).
 *  Actual latencies form a normal distribution closely centered
 *  on the average latency.
 *  Other calls are forwarded directly. */
@Namespace("arrow::io") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class SlowInputStream extends InputStreamSlowInputStreamBase {
    static { Loader.load(); }


  
    public SlowInputStream(@SharedPtr InputStream stream,
                          @SharedPtr LatencyGenerator latencies) { super((Pointer)null); allocate(stream, latencies); }
    private native void allocate(@SharedPtr InputStream stream,
                          @SharedPtr LatencyGenerator latencies);
  
    public SlowInputStream(@SharedPtr InputStream stream, double average_latency) { super((Pointer)null); allocate(stream, average_latency); }
    private native void allocate(@SharedPtr InputStream stream, double average_latency);
  
    public SlowInputStream(@SharedPtr InputStream stream, double average_latency,
                          int seed) { super((Pointer)null); allocate(stream, average_latency, seed); }
    private native void allocate(@SharedPtr InputStream stream, double average_latency,
                          int seed);
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SlowInputStream(Pointer p) { super(p); }


  public native @ByVal Status Close();
  public native @ByVal Status Abort();
  public native @Cast("bool") boolean closed();

  public native @ByVal Status Read(@Cast("int64_t") long nbytes, @Cast("int64_t*") LongPointer bytes_read, Pointer out);
  public native @ByVal Status Read(@Cast("int64_t") long nbytes, @Cast("int64_t*") LongBuffer bytes_read, Pointer out);
  public native @ByVal Status Read(@Cast("int64_t") long nbytes, @Cast("int64_t*") long[] bytes_read, Pointer out);
  public native @ByVal Status Read(@Cast("int64_t") long nbytes, @SharedPtr ArrowBuffer out);

  public native @ByVal Status Tell(@Cast("int64_t*") LongPointer _position);
  public native @ByVal Status Tell(@Cast("int64_t*") LongBuffer _position);
  public native @ByVal Status Tell(@Cast("int64_t*") long[] _position);
}
