// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow_dataset;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.arrow.*;
import static org.bytedeco.arrow.global.arrow.*;
import org.bytedeco.parquet.*;
import static org.bytedeco.arrow.global.parquet.*;

import static org.bytedeco.arrow.global.arrow_dataset.*;


/** \brief A FileFormat implementation that reads from Feather (Arrow
 *  IPC protocol) files */
@Namespace("arrow::dataset") @Properties(inherit = org.bytedeco.arrow.presets.arrow_dataset.class)
public class FeatherFileFormat extends FileFormat {
    static { Loader.load(); }
    /** Default native constructor. */
    public FeatherFileFormat() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public FeatherFileFormat(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FeatherFileFormat(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public FeatherFileFormat position(long position) {
        return (FeatherFileFormat)super.position(position);
    }

  public native @StdString String name();

  /** \brief Return true if the given file extension */
  public native @Cast("bool") boolean IsKnownExtension(@StdString String ext);
  public native @Cast("bool") boolean IsKnownExtension(@StdString BytePointer ext);

  /** \brief Open a file for scanning */
  public native @ByVal Status ScanFile(@Const @ByRef FileSource source, @SharedPtr ScanOptions scan_options,
                    @SharedPtr ScanContext scan_context,
                    ScanTaskIterator out);
}
