// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow_dataset;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.arrow.*;
import static org.bytedeco.arrow.global.arrow.*;
import org.bytedeco.parquet.*;
import static org.bytedeco.arrow.global.parquet.*;

import static org.bytedeco.arrow.global.arrow_dataset.*;


/** \brief Top-level interface for a Dataset with fragments coming
 *  from possibly multiple sources. */
@Namespace("arrow::dataset") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow_dataset.class)
public class Dataset extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public Dataset(Pointer p) { super(p); }

  /** WARNING, this constructor is not recommend, use Dataset::Make instead.
   *  @param sources [in] one or more input data sources
   *  @param schema [in] a known schema to conform to, may be nullptr */
  public Dataset(@ByVal DataSourceVector sources,
                     @SharedPtr Schema schema) { super((Pointer)null); allocate(sources, schema); }
  private native void allocate(@ByVal DataSourceVector sources,
                     @SharedPtr Schema schema);

  public static native @ByVal Status Make(@ByVal DataSourceVector sourcs,
                       @SharedPtr Schema schema, @SharedPtr Dataset out);

  /** \brief Begin to build a new Scan operation against this Dataset */
  public native @ByVal Status NewScan(@UniquePtr ScannerBuilder out);

  public native @Const @ByRef DataSourceVector sources();

  public native @SharedPtr Schema schema();
}
