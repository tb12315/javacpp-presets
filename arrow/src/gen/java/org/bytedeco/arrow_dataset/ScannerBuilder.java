// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow_dataset;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.arrow.*;
import static org.bytedeco.arrow.global.arrow.*;
import org.bytedeco.parquet.*;
import static org.bytedeco.arrow.global.parquet.*;

import static org.bytedeco.arrow.global.arrow_dataset.*;


@Namespace("arrow::dataset") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow_dataset.class)
public class ScannerBuilder extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ScannerBuilder(Pointer p) { super(p); }

  public ScannerBuilder(@SharedPtr Dataset dataset,
                   @SharedPtr ScanContext scan_context) { super((Pointer)null); allocate(dataset, scan_context); }
  private native void allocate(@SharedPtr Dataset dataset,
                   @SharedPtr ScanContext scan_context);

  /** \brief Set */
  public native ScannerBuilder Project(@Const @ByRef StringVector columns);

  public native ScannerBuilder AddFilter(@SharedPtr Filter filter);

  public native ScannerBuilder SetGlobalFileOptions(@SharedPtr @ByVal FileScanOptions options);

  /** \brief If true (default), add partition keys to the
   *  RecordBatches that the scan produces if they are not in the data
   *  otherwise */
  public native ScannerBuilder IncludePartitionKeys(@Cast("bool") boolean include/*=true*/);
  public native ScannerBuilder IncludePartitionKeys();

  /** \brief Return the constructed now-immutable Scanner object */
  public native @ByVal Status Finish(@UniquePtr Scanner out);
}
