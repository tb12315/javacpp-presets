// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.parquet;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.arrow.*;
import static org.bytedeco.arrow.global.arrow.*;

import static org.bytedeco.arrow.global.parquet.*;


@Namespace("parquet") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.parquet.class)
public class LevelDecoder extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public LevelDecoder(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public LevelDecoder(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public LevelDecoder position(long position) {
        return (LevelDecoder)super.position(position);
    }

  public LevelDecoder() { super((Pointer)null); allocate(); }
  private native void allocate();

  // Initialize the LevelDecoder state with new data
  // and return the number of bytes consumed
  public native int SetData(Encoding.type encoding, short max_level, int num_buffered_values,
                @Cast("const uint8_t*") BytePointer data);
  public native int SetData(@Cast("parquet::Encoding::type") int encoding, short max_level, int num_buffered_values,
                @Cast("const uint8_t*") ByteBuffer data);
  public native int SetData(Encoding.type encoding, short max_level, int num_buffered_values,
                @Cast("const uint8_t*") byte[] data);
  public native int SetData(@Cast("parquet::Encoding::type") int encoding, short max_level, int num_buffered_values,
                @Cast("const uint8_t*") BytePointer data);
  public native int SetData(Encoding.type encoding, short max_level, int num_buffered_values,
                @Cast("const uint8_t*") ByteBuffer data);
  public native int SetData(@Cast("parquet::Encoding::type") int encoding, short max_level, int num_buffered_values,
                @Cast("const uint8_t*") byte[] data);

  // Decodes a batch of levels into an array and returns the number of levels decoded
  public native int Decode(int batch_size, ShortPointer levels);
  public native int Decode(int batch_size, ShortBuffer levels);
  public native int Decode(int batch_size, short[] levels);
}
